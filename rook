#!/bin/bash

OPTION=$1
ARGUMENT=$2

# TODO: PLATFORM and DEPENDENCIES should be read from Rookfile
PLATFORM="ruby-1.9.3"
DEPENDENCIES="mysql-5.5 testing"

function development_deploy
{
  docker stop $PLATFORM
  docker rm $PLATFORM
  APPLICATION_ID=$(docker run -name $PLATFORM -d -v $PWD/rook/$PLATFORM:/mount -v $PWD:/app rook/$PLATFORM init_wrapper $DEPENDENCIES)

  for DEPENDENCY in $DEPENDENCIES
  do
    docker stop $DEPENDENCY
    docker rm $DEPENDENCY
    DEPENDENCY_ID=$(docker run -name $DEPENDENCY -d -v $PWD/rook/$DEPENDENCY:/mount rook/$DEPENDENCY)

    # TODO: FIX INTERCONNECT BETWEEN APPLICATION AND DEPENDENCY HERE

  done
}

function ssh_wrapper
{
  if docker inspect $ARGUMENT 2> /dev/null | grep --quiet 'IPAddress' ; then
    if docker inspect $ARGUMENT | grep 'IPAddress' | grep -E --quiet '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' ; then
        IP_ADDRESS=`docker inspect $ARGUMENT | grep 'IPAddress' | sed -e 's/\s*"IPAddress": "//' -e 's/",\s*//'`
        ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i ~/insecure_key root@$IP_ADDRESS
    else
      echo "$ARGUMENT is not running"
    fi
  else
    echo "$ARGUMENT does not exist"
  fi
}

function add
{
	echo "add"
  # TODO: Add the dependency to Rookfile
  # TODO: Download rook mount
}

function remove
{
	echo "remove"
  # TODO: Remove the dependency from Rookfile
}


function print_help
{
	cat << "EOF"
Rook, the application deployment service.

Examples:
  rook list available           # List all available dependencies
  rook add mysql-5.5            # Add mysql-5.5 as a dependency
  rook deploy development       # Deploy locally in development mode
  rook ssh mysql-5.5            # Log in to the mys1ql-5.5 environment

Usage:
  rook list available           # List available dependencies
  rook list installed           # List installed dependencies

  rook ssh <dependency>         # Log in to the dependency environment

  rook add <dependency>         # Add a dependency
  rook remove <depencency>      # Remove a dependency
  rook deploy development       # deploy locally in development mosw
  rook deploy production        # deploy remotely in production mode
EOF
}


case $OPTION in
"add")
	add;;
"remove")
	remove;;
"deploy")
	development_deploy;;
"ssh")
  ssh_wrapper;;
*)
	print_help;;
esac

